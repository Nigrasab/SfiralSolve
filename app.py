import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re
import io

# ------------------------------
# –í–ï–†–•–ù–Ø–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–ï–ö–¢–ï
# ------------------------------
st.set_page_config(page_title="–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞", layout="centered")
st.title("–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞")

st.markdown(
    """
    üåÄ **–ü—Ä–æ–µ–∫—Ç "–°—Ñ–∏—Ä–∞–ª—å–°–æ–ª—å"** ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –∏–∑–º–µ—Ä–µ–Ω–∏–π, 
    –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –º–æ–¥–µ–ª—è–º–∏ –≤—Ä–µ–º–µ–Ω–∏, —Å–æ–∑–Ω–∞–Ω–∏—è –∏ –º—ã—à–ª–µ–Ω–∏—è. 
    –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å JSON-—Ñ–∞–π–ª (–¥–æ 5 –ú–ë) —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–µ–∫—Ç–æ—Ä–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π, –∏ —Å–∏—Å—Ç–µ–º–∞ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç 
    –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
    """
)

# ------------------------------
# –ó–ê–ì–†–£–ó–ö–ê –§–ê–ô–õ–ê
# ------------------------------
uploaded_file = st.file_uploader("\U0001F4C2 –ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏–π", type="json")

if uploaded_file:
    try:
        df = pd.read_json(uploaded_file)

        if df.memory_usage(deep=True).sum() > 5 * 1024 * 1024:
            st.warning("\U000026A0 –§–∞–π–ª –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç 5 –ú–ë. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞.")
        else:
            # –ü–æ–¥—Å—á—ë—Ç —á–∞—Å—Ç–æ—Ç
            df_counts = df["statevector"].value_counts().reset_index()
            df_counts.columns = ["–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–ß–∞—Å—Ç–æ—Ç–∞"]

            # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —à–∞–±–ª–æ–Ω—É
            pattern_input = st.text_input("\U0001F50D –§–∏–ª—å—Ç—Ä –ø–æ –±–∏—Ç–æ–≤–æ–º—É —à–∞–±–ª–æ–Ω—É (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ * –¥–ª—è –ª—é–±—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π):", value="")
            if pattern_input:
                try:
                    regex = re.compile("^" + pattern_input.replace("*", ".") + "$")
                    df_counts = df_counts[df_counts["–°–æ—Å—Ç–æ—è–Ω–∏–µ"].apply(lambda x: bool(regex.match(x)))]
                except re.error:
                    st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —à–∞–±–ª–æ–Ω —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è")

            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
            sort_order = st.radio("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —á–∞—Å—Ç–æ—Ç–µ:", ["–ü–æ —É–±—ã–≤–∞–Ω–∏—é", "–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"], horizontal=True)
            ascending = sort_order == "–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"
            df_counts = df_counts.sort_values("–ß–∞—Å—Ç–æ—Ç–∞", ascending=ascending)

            # –°–ª–∞–π–¥–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
            max_n = min(50, len(df_counts))
            top_n = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π:", 1, max_n, value=min(10, max_n))
            df_top = df_counts.head(top_n)

            # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
            fig, ax = plt.subplots(figsize=(10, 4))
            sns.barplot(x="–°–æ—Å—Ç–æ—è–Ω–∏–µ", y="–ß–∞—Å—Ç–æ—Ç–∞", data=df_top, palette="Blues_r", ax=ax)
            ax.set_title(f"–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–æ–ø-{top_n} —Å–æ—Å—Ç–æ—è–Ω–∏–π")
            ax.set_xlabel("–°–æ—Å—Ç–æ—è–Ω–∏–µ")
            ax.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
            plt.xticks(rotation=45)
            st.pyplot(fig)

            # –¢–∞–±–ª–∏—Ü–∞
            st.dataframe(df_top, use_container_width=True)

            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ CSV
            csv_buffer = io.BytesIO()
            df_top.to_csv(csv_buffer, index=False)
            st.download_button(
                label="\U0001F4E5 –°–∫–∞—á–∞—Ç—å CSV",
                data=csv_buffer.getvalue(),
                file_name="—Ç–æ–ø_—Å–æ—Å—Ç–æ—è–Ω–∏–π.csv",
                mime="text/csv"
            )

            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ PNG
            img_buffer = io.BytesIO()
            plt.savefig(img_buffer, format='png')
            img_buffer.seek(0)
            st.download_button(
                label="\U0001F5BC –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ PNG",
                data=img_buffer,
                file_name="–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞_—Å–æ—Å—Ç–æ—è–Ω–∏–π.png",
                mime="image/png"
            )

            st.success("\U0001F4C1 –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")

            # -----------------------------------
            # –ù–ò–ñ–ù–ò–ô –°–ú–´–°–õ–û–í–û–ô –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô
            # -----------------------------------
            st.markdown("""
            ---
            ### üß† –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
            –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–æ—Ç–Ω—ã–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç—Ä–∞–∂–∞—é—Ç —É—Å—Ç–æ–π—á–∏–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π,
            –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –≤—Ä–µ–º–µ–Ω–∏ –∏–ª–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏ –º—ã—à–ª–µ–Ω–∏—è. 
            –°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–∫ —Ä–∏—Ç–º–∏—á–Ω—ã–µ —É–∑–ª—ã —Å–æ–∑–Ω–∞–Ω–∏—è, 
            –ø—Ä–æ—è–≤–ª—è—é—â–∏–µ—Å—è –≤ –∏–∑–º–µ—Ä–µ–Ω–∏—è—Ö. –ü–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å 
            –Ω–∞ –≥–ª—É–±–∏–Ω–Ω—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏–ª–∏ —ç–≤–æ–ª—é—Ü–∏–∏ —Å–∏—Å—Ç–µ–º –º—ã—à–ª–µ–Ω–∏—è.
            """)

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
