############################
# app.py
############################
import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# –ò–∑ Qiskit –±–µ—Ä—ë–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Å–∏–º—É–ª—è—Ü–∏–∏ –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã
from qiskit import QuantumCircuit, Aer, transpile
from qiskit.visualization import plot_histogram

############################
# –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–†–ê–ù–ò–¶–´
############################
st.set_page_config(
    page_title="Sfiral Interference MVP",
    layout="centered",
    page_icon="üåÄ"
)

############################
# –í–í–ï–†–•–£ ‚Äî –õ–û–ì–û/–ó–ê–ì–û–õ–û–í–û–ö
############################
st.title("–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞")
st.markdown("""
**MVP-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ** –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ _¬´–°—Ñ–∏—Ä–∞–ª—å–Ω–æ–π¬ª_ –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã, 
–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–µ–π –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏—é –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —É—Å—Ç–æ–π—á–∏–≤—ã–µ —É–∑–ª—ã –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏.

> _–ö–∞–∫ —ç—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –±–∏–æ–ª–æ–≥–∏–µ–π, –≤—Ä–µ–º–µ–Ω–µ–º –∏ —Å–æ–∑–Ω–∞–Ω–∏–µ–º?_
> 
> - **–í—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏—è**: —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–∑–æ–≤—ã–µ —Å–¥–≤–∏–≥–∏ –Ω–∞–ø–æ–º–∏–Ω–∞—é—Ç —Ä–∏—Ç–º—ã –≤ –±–∏–æ—Å–∏—Å—Ç–µ–º–∞—Ö.  
> - **–£—Å—Ç–æ–π—á–∏–≤—ã–µ —É–∑–ª—ã**: —Å–∞–º—ã–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Ö–æ–∂–∏ –Ω–∞ ¬´–ø—Ä–∏–≤—ã—á–∫–∏¬ª –∏–ª–∏ ¬´—Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã¬ª –º—ã—à–ª–µ–Ω–∏—è.  
> - **S-–æ–±—Ä–∞–∑–Ω–∞—è —Ç–æ–ø–æ–ª–æ–≥–∏—è**: –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Ä–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–µ, 
  –æ—Ç—Ä–∞–∂–∞—é—â–µ–µ —Ü–∏–∫–ª–∏—á–Ω–æ—Å—Ç—å –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–∏—Ç–º–æ–≤.
""")

############################
# –ü–ê–†–ê–ú–ï–¢–†–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
############################

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏—Ç–æ–≤
n_qubits = st.slider("–ß–∏—Å–ª–æ –∫—É–±–∏—Ç–æ–≤:", min_value=2, max_value=8, value=5)

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–æ—Ç–æ–≤ (–∏–∑–º–µ—Ä–µ–Ω–∏–π)
shots = st.slider("–ß–∏—Å–ª–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π (shots):", min_value=100, max_value=4096, value=1024, step=100)

# –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ö–µ–º—É"):

    # –°–æ–∑–¥–∞—ë–º –∫–≤–∞–Ω—Ç–æ–≤—É—é —Å—Ö–µ–º—É
    qc = QuantumCircuit(n_qubits, n_qubits)

    # 1) –°—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏—è
    for i in range(n_qubits):
        qc.h(i)

    # 2) –§—Ä–∞–∫—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–∑–æ–≤—ã–µ —Å–¥–≤–∏–≥–∏ (—Å—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞)
    #    phi_i = pi / (3 + 2*i)
    import math
    for i in range(n_qubits):
        qc.rz(math.pi / (3 + 2*i), i)

    # 3) S-–æ–±—Ä–∞–∑–Ω—ã–µ CNOT-—Å–≤—è–∑–∏ (–æ–±—Ä–∞—Ç–Ω—ã–µ)
    for i in range(n_qubits // 2):
        qc.cx(i, n_qubits - i - 1)

    # 4) –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏—è
    for i in range(n_qubits):
        qc.h(i)

    # 5) –ò–∑–º–µ—Ä–µ–Ω–∏–µ
    qc.measure(range(n_qubits), range(n_qubits))

    ######################################
    # –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–Ø –°–•–ï–ú–´
    ######################################
    st.markdown("### –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞:")
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ö–µ–º—É —á–µ—Ä–µ–∑ qiskit
    # plot_circuit = qc.draw(output="mpl")  # plot_circuit ‚Äî —Ä–∏—Å—É–Ω–æ–∫
    fig_circ = qc.draw(output="mpl")
    st.pyplot(fig_circ)

    ######################################
    # –ó–ê–ü–£–°–ö –°–ò–ú–£–õ–Ø–¶–ò–ò
    ######################################
    simulator = Aer.get_backend("qasm_simulator")
    compiled_qc = transpile(qc, simulator)
    result = simulator.run(compiled_qc, shots=shots).result()
    counts = result.get_counts()

    ######################################
    # –ì–ò–°–¢–û–ì–†–ê–ú–ú–ê –í–ï–†–û–Ø–¢–ù–û–°–¢–ï–ô
    ######################################
    st.markdown(f"### –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π (—à–æ—Ç—ã = {shots})")
    # Qiskit –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è plot_histogram
    fig_counts = plot_histogram(counts, figsize=(10,5))
    st.pyplot(fig_counts)

    ######################################
    # –í–´–î–ï–õ–Ø–ï–ú –°–ê–ú–´–ï –í–ï–†–û–Ø–¢–ù–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø
    ######################################
    # –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º counts –≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    sorted_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)
    top_states = sorted_counts[:5]  # –¢–æ–ø-5 —Å–∞–º—ã—Ö –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö

    st.markdown("**–¢–æ–ø-5 —É—Å—Ç–æ–π—á–∏–≤—ã—Ö —É–∑–ª–æ–≤ (—Å–∞–º—ã–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è):**")
    for state, freq in top_states:
        st.write(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ {state} ‚Äî {freq} —Ä–∞–∑")

    ######################################
    # –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –ö –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú
    ######################################
    st.markdown("""
---
### –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
- **–°–∞–º–æ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ** —á–∞—Å—Ç–æ –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å "—É—Å—Ç–æ–π—á–∏–≤—ã–º —É–∑–ª–æ–º" –≤ –°—Ñ–∏—Ä–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ.
- **S-–æ–±—Ä–∞–∑–Ω—ã–µ —Å–≤—è–∑–∏** –∑–∞–¥–∞—é—Ç –≤–æ–ª–Ω–æ–≤—É—é –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏—é, –æ—Ç—Ä–∞–∂–∞—é—â—É—é –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ–∑–æ–Ω–∞–Ω—Å—ã –≤ —Å–∏—Å—Ç–µ–º–µ.
- **–°–≤—è–∑—å —Å –±–∏–æ–ª–æ–≥–∏–µ–π**: –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã –º–æ–≥—É—Ç –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Ç–º—ã –º–æ–∑–≥–∞ –∏–ª–∏ –±–∏–æ—Å–∏—Å—Ç–µ–º.
- **–°–≤—è–∑—å —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º**: —Ñ–∞–∑–æ–≤—ã–µ —Å–¥–≤–∏–≥–∏ –Ω–∞–ø–æ–º–∏–Ω–∞—é—Ç —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω—ã–µ —Ü–∏–∫–ª—ã, —Ñ–æ—Ä–º–∏—Ä—É—é—â–∏–µ —É—Å—Ç–æ–π—á–∏–≤—ã–µ —Ç–æ—á–∫–∏ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è.
""")

else:
    st.info("–ù–∞–∂–º–∏—Ç–µ '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ö–µ–º—É', —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")

############################
# –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
############################
