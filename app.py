# app.py ‚Äî –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º, –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–µ–º –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ 5 –ú–ë
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import io
import re

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
st.set_page_config(
    page_title="–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞",
    layout="centered",
    page_icon="üåÄ"
)

# === –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã (—Å–≤–µ—Ç–ª–∞—è/—Ç—ë–º–Ω–∞—è) ===
theme = st.toggle("\U0001F319 –¢—ë–º–Ω–∞—è —Ç–µ–º–∞")
if theme:
    st.markdown("""
        <style>
        body { background-color: #0e1117; color: #fafafa; }
        </style>
    """, unsafe_allow_html=True)

# === –õ–æ–≥–æ—Ç–∏–ø –ø–æ —Ü–µ–Ω—Ç—Ä—É ===
st.markdown("""
    <div style='text-align: center;'>
        <img src='https://raw.githubusercontent.com/Nigrasab/SfiralSolve/main/logo.png' width='60'>
    </div>
""", unsafe_allow_html=True)

# === –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ ===
st.title("–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞")
st.subheader("üåÄ –û –ø—Ä–æ–µ–∫—Ç–µ")
st.markdown("""
    –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —á–∞—Å—Ç–æ—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤.
    –û–Ω–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö,
    –æ—Ç—Ä–∞–∂–∞—é—â–∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∏—Ö —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—è–º–∏ –º—ã—à–ª–µ–Ω–∏—è, —Å–æ–∑–Ω–∞–Ω–∏—è –∏ —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫–∏. 
    –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ ‚Äî `.json`, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–¥ –∫–ª—é—á–æ–º `statevector`.
    **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 5 –ú–ë.**
""")

# === –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ ===
st.markdown("\n**üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏–π**")
uploaded_file = st.file_uploader("–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞", type="json")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
if uploaded_file:
    if uploaded_file.size > 5 * 1024 * 1024:
        st.error("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5 –ú–ë.")
    else:
        try:
            df = pd.read_json(uploaded_file)
            if len(df) > 50000:
                st.warning("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –†–∞–∑–¥–µ–ª–∏—Ç–µ –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
            else:
                df_counts = df["statevector"].value_counts().reset_index()
                df_counts.columns = ["–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–ß–∞—Å—Ç–æ—Ç–∞"]

                # === –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —à–∞–±–ª–æ–Ω—É ===
                pattern_input = st.text_input("üîç –§–∏–ª—å—Ç—Ä –ø–æ –±–∏—Ç–æ–≤–æ–º—É —à–∞–±–ª–æ–Ω—É (* –¥–ª—è –ª—é–±—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π):", value="")
                if pattern_input:
                    try:
                        regex = re.compile("^" + pattern_input.replace("*", ".") + "$")
                        df_counts = df_counts[df_counts["–°–æ—Å—Ç–æ—è–Ω–∏–µ"].apply(lambda x: bool(regex.match(x)))]
                    except:
                        st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —à–∞–±–ª–æ–Ω —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.")

                # === –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ ===
                sort_order = st.radio("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —á–∞—Å—Ç–æ—Ç–µ:", ["–ü–æ —É–±—ã–≤–∞–Ω–∏—é", "–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"], horizontal=True)
                ascending = sort_order == "–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"
                df_counts = df_counts.sort_values("–ß–∞—Å—Ç–æ—Ç–∞", ascending=ascending)

                # === –°–ª–∞–π–¥–µ—Ä —Ç–æ–ø-N ===
                top_n = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π:", 1, min(50, len(df_counts)), 10)
                df_top = df_counts.head(top_n)

                # === –ì—Ä–∞—Ñ–∏–∫ ===
                fig, ax = plt.subplots(figsize=(10, 4))
                sns.barplot(x="–°–æ—Å—Ç–æ—è–Ω–∏–µ", y="–ß–∞—Å—Ç–æ—Ç–∞", data=df_top, palette="Blues_r", ax=ax)
                ax.set_title(f"–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–æ–ø-{top_n} —Å–æ—Å—Ç–æ—è–Ω–∏–π")
                ax.set_xlabel("–°–æ—Å—Ç–æ—è–Ω–∏–µ")
                ax.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
                plt.xticks(rotation=45)
                st.pyplot(fig)

                # === –¢–∞–±–ª–∏—Ü–∞ ===
                st.dataframe(df_top, use_container_width=True)

                # === –ö–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ===
                csv_buffer = io.BytesIO()
                df_top.to_csv(csv_buffer, index=False)
                st.download_button("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å CSV", csv_buffer.getvalue(), "—Ç–æ–ø_—Å–æ—Å—Ç–æ—è–Ω–∏–π.csv", mime="text/csv")

                img_buffer = io.BytesIO()
                plt.savefig(img_buffer, format="png")
                img_buffer.seek(0)
                st.download_button("üñºÔ∏è –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ PNG", img_buffer, "–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞_—Å–æ—Å—Ç–æ—è–Ω–∏–π.png", mime="image/png")

                # === –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===
                st.success("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
                st.markdown("""
                    üß† **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:**
                    –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç—Ä–∞–∂–∞—é—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑–º–µ—Ä—è–µ–º—ã—Ö –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π.
                    –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã –º–æ–≥—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —É—Å—Ç–æ–π—á–∏–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω—É—é –ø–µ—Ä–∏–æ–¥–∏–∫—É –∏–ª–∏ 
                    –ø–æ–≤–µ–¥–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –¥–∏–Ω–∞–º–∏–∫–æ–π —Å–æ–∑–Ω–∞–Ω–∏—è. –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã—è–≤–ª—è—Ç—å
                    –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏, –ª–µ–∂–∞—â–∏–µ –≤ –æ—Å–Ω–æ–≤–µ –º—ã—à–ª–µ–Ω–∏—è –∏–ª–∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ü–∏–∫–ª–æ–≤.
                """)

        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
