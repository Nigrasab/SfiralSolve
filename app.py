import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re
import io

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –§–æ–Ω–¥–∞
st.markdown("<h5 style='text-align: center;'>–ù–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –§–æ–Ω–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏—Ä–æ–¥—ã –≤—Ä–µ–º–µ–Ω–∏</h5>", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
st.set_page_config(page_title="–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞", layout="centered")
st.title("–°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞")

# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
st.subheader("üåÄ –û –ø—Ä–æ–µ–∫—Ç–µ")
st.markdown(
    """
    –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —á–∞—Å—Ç–æ—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤. 
    –û–Ω–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –æ—Ç—Ä–∞–∂–∞—é—â–∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∏—Ö —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—è–º–∏ –º—ã—à–ª–µ–Ω–∏—è, —Å–æ–∑–Ω–∞–Ω–∏—è –∏ —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫–∏.

    –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ ‚Äî `.json`, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–¥ –∫–ª—é—á–æ–º `statevector`. 
    **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 5 –ú–ë.**
    """
)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
st.markdown("### üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏–π")
uploaded_file = st.file_uploader("–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞", type="json")

if uploaded_file:
    try:
        df = pd.read_json(uploaded_file)

        if len(df) > 50000:
            st.warning("‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –†–∞–∑–¥–µ–ª–∏—Ç–µ –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        else:
            df_counts = df["statevector"].value_counts().reset_index()
            df_counts.columns = ["–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–ß–∞—Å—Ç–æ—Ç–∞"]

            # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —à–∞–±–ª–æ–Ω—É
            pattern_input = st.text_input("üîç –§–∏–ª—å—Ç—Ä –ø–æ –±–∏—Ç–æ–≤–æ–º—É —à–∞–±–ª–æ–Ω—É (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ * –¥–ª—è –ª—é–±—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π):", value="")
            if pattern_input:
                try:
                    regex = re.compile("^" + pattern_input.replace("*", ".") + "$")
                    df_counts = df_counts[df_counts["–°–æ—Å—Ç–æ—è–Ω–∏–µ"].apply(lambda x: bool(regex.match(x)))]
                except re.error:
                    st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —à–∞–±–ª–æ–Ω —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.")

            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
            sort_order = st.radio("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —á–∞—Å—Ç–æ—Ç–µ:", ["–ü–æ —É–±—ã–≤–∞–Ω–∏—é", "–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"], horizontal=True)
            ascending = sort_order == "–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"
            top_n = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π:", 1, 50, 10)
            df_top = df_counts.sort_values(by="–ß–∞—Å—Ç–æ—Ç–∞", ascending=ascending).head(top_n)

            # –ì—Ä–∞—Ñ–∏–∫
            fig, ax = plt.subplots(figsize=(10, 4))
            sns.barplot(x="–°–æ—Å—Ç–æ—è–Ω–∏–µ", y="–ß–∞—Å—Ç–æ—Ç–∞", data=df_top, palette="Blues_r", ax=ax)
            ax.set_title(f"–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–æ–ø-{top_n} —Å–æ—Å—Ç–æ—è–Ω–∏–π")
            ax.set_xlabel("–°–æ—Å—Ç–æ—è–Ω–∏–µ")
            ax.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
            plt.xticks(rotation=45)
            st.pyplot(fig)

            # –¢–∞–±–ª–∏—Ü–∞
            st.dataframe(df_top, use_container_width=True)

            # –ö–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            csv_buffer = io.BytesIO()
            df_top.to_csv(csv_buffer, index=False)
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å CSV",
                data=csv_buffer.getvalue(),
                file_name="—Ç–æ–ø_—Å–æ—Å—Ç–æ—è–Ω–∏–π.csv",
                mime="text/csv"
            )

            img_buffer = io.BytesIO()
            plt.savefig(img_buffer, format='png')
            img_buffer.seek(0)
            st.download_button(
                label="üñº –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ PNG",
                data=img_buffer,
                file_name="–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞_—Å–æ—Å—Ç–æ—è–Ω–∏–π.png",
                mime="image/png"
            )

            st.success("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")

            # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
            st.markdown("""
            ---
            ### üß† –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            –û—Ç–æ–±—Ä–∞–∂—ë–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —É—Å—Ç–æ–π—á–∏–≤—ã, –∞ –∫–∞–∫–∏–µ ‚Äî —Ä–µ–¥–∫–∏. 
            –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã—è–≤–∏—Ç—å **—É–∑–ª—ã —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏** ‚Äî –∫–ª—é—á–µ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≥–¥–µ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. 
            –¢–∞–∫–∏–µ —É–∑–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∞–Ω–∞–ª–æ–≥–∞–º–∏ **–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–∫—Å–∞—Ü–∏–π –≤ –º—ã—à–ª–µ–Ω–∏–∏** –∏–ª–∏ **–±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏**, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–∞–º—è—Ç–∏ –∏ —Å–æ–∑–Ω–∞–Ω–∏—è. 

            –°—Ñ–∏—Ä–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–≤–∞–Ω—Ç–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω—É—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É**, –æ—Ç—Ä–∞–∂–∞—é—â—É—é –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–∞–Ω–Ω—ã–µ, –∞ **—Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Ä–µ–º–µ–Ω–∏** –∏ **–º—ã—Å–ª—è—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤**, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ—à–ª–æ–µ –∏ –±—É–¥—É—â–µ–µ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω—ã –≤ –µ–¥–∏–Ω–æ–º –ø–æ—Ç–æ–∫–µ.
            """)

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
